version: '3'

services:
  open-webui:
    image: ghcr.io/ai-cfia/louis/open-webui:louis-main
    restart: always
    ports:
      - "3000:8080"
    volumes:
      - open-webui-data:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - LITELLM_URL=http://litellm:8000
      # Add any custom environment variables here
    networks:
      - ai-network
    depends_on:
      - ollama
      - litellm

  ollama:
    image: ollama/ollama:latest
    restart: always
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - ai-network

  litellm:
    image: ghcr.io/ai-cfia/louis/litellm:louis-main
    restart: always
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      # Add LiteLLM configuration here
    networks:
      - ai-network

  gpt-researcher-mcp:
    image: ghcr.io/ai-cfia/louis/gpt-researcher-mcp:louis-main
    restart: always
    # Remove direct port exposure since we'll access it through MCPO
    # ports:
    #   - "8080:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      # Add other environment variables for GPT Researcher MCP here
    networks:
      - ai-network
    depends_on:
      - litellm

  mcpo-proxy:
    build:
      context: ./deployment/mcpo-proxy
    restart: always
    ports:
      - "8080:8080"
    command: >
      --port 8080 --proxy http://gpt-researcher-mcp:8000
    environment:
      - MCP_TARGET_URL=http://gpt-researcher-mcp:8000
    networks:
      - ai-network
    depends_on:
      - gpt-researcher-mcp

networks:
  ai-network:
    driver: bridge

volumes:
  open-webui-data:
  ollama-data:
 